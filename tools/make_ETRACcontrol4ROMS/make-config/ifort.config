# Set options for the Intel Fortran 95 compiler - ver. 11

FC = ifort

### default options:
FFLAGS  = -g -p -O3 -cpp -r8 -assume byterecl -mieee-fp

### other options:
FFLAGS += -check bounds
FFLAGS += -warn
FFLAGS += -zero

LDFLAGS = -O3

# machine specific configuration
NETCDFHOME = /cvmfs/soft.computecanada.ca/easybuild/software/2017/avx2/Compiler/intel2016.4/netcdf-fortran/4.4.4
INCDIRS     += -I$(NETCDFHOME)/include
LIBDIRS     += -L$(NETCDFHOME)/lib
#EXTRA_LIBS  += -lnetcdf -lnetcdff
EXTRA_LIBS  += -L/cvmfs/soft.computecanada.ca/easybuild/software/2017/Core/icc/2016.4.258/lib/intel64
EXTRA_LIBS  += -L/cvmfs/soft.computecanada.ca/easybuild/software/2017/avx2/Compiler/intel2016.4/netcdf/4.4.1.1/lib64
EXTRA_LIBS  += -lnetcdf -lnetcdff -liomp5 -lpthread

#------------------------------------------------------------------------
# detailed descriptions of IFORT compiler options ...
#------------------------------------------------------------------------
# -g    Produces symbolic debug information in the object file. The compiler does not support the
#       generation of debugging information in assemblable files. If you specify the -g option,
#       the resulting object file will contain debugging information, but the assemblable file will not.
#       On IA-32 architecture, specifying the -g or -O0 option automatically sets the -fp option.
# -p    Compiles and links for function profiling with gprof(1). This is the same as specifying -pg,
#       except that -pg is only available on systems using IA-32 architecture or Intel(R) 64 architecture.
# -O3   Enables  -O2  optimizations plus more aggressive optimizations, such as prefetching, scalar
#       replacement, and loop transformations. Enables optimizations for maximum speed, but does not
#       guarantee higher performance unless loop and memory access transformations take place.
#       On systems using IA-32 architecture or Intel(R) 64 architecture, when the -O3 option is used with
#       the -ax and -x options, it causes the compiler to perform more aggressive data dependency analysis
#       than for -O2, which may result in longer compilation times.
#       On systems using IA-64 architecture, the -O3 option enables optimizations for technical computing
#       applications (loop-intensive code): loop optimizations and data prefetch.
# -cpp  Runs the Fortran preprocessor on source files prior to compilation (same as the -fpp option).
# -r8   Makes default real and complex variables 8 bytes long. REAL declarations are treated as DOUBLE
#       PRECISION (REAL(KIND=8)) and COMPLEX  declarations  are  treated  as  DOUBLE  COMPLEX
#       (COMPLEX(KIND=8)). This option is the same as specifying -real-size 64 or -autodouble.
# -i8   Makes default integer and logical variables 8 bytes long (same as the -integer-size 64 option).
#       The default is -integer-size 32.
# -zero  Initializes to zero all local scalar variables of intrinsic type INTEGER, REAL, COMPLEX, or
#       LOGICAL that are saved but not yet  initialized. The default is -nozero. Use -save on the command
#       line to make all local variables specifically marked as SAVE.
# -assume byterecl
#       Specifies that the units for the OPEN statement RECL specifier (record length) value are in bytes
#       for unformatted data files, not longwords (four-byte units). For formatted  files, the  RECL unit
#       is always in bytes. The default is -assume nobyterecl. INQUIRE returns RECL in bytes if the unit
#       is not open. INQUIRE  returns RECL in longwords if the file is open for unformatted data (and
#       -assume  byterecl is  not  specified); otherwise, it returns RECL in bytes.
# -warn all
#       Enables all warning messages.  This is the same as specifying -warn with no keyword.
# -mieee-fp
#       Maintains floating-point precision (while disabling some optimizations). The option restricts
#       optimization to maintain declared precision and to ensure that floating-point arithmetic conforms
#       more closely to the ANSI* and IEEE standards. This is the same as specifying -fltconsistency.
